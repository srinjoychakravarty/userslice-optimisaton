f get_active_user_slices() 
{
    echo("Populating active user slices...")
	last_seen_hash = {}
	users = []
	user_slices = `ls /sys/fs/cgroup/cpu/user.slice/` 
	usr_list = user_slices.lines()
	num_users = usr_list.len()
	base_path = "/sys/fs/cgroup/cpu/user.slice/"
	for i = 0; i < num_users; i = i + 1
	{
		usr_str = usr_list[i]
		if ("user" in usr_str) 
		{
			target = base_path+usr_str
			current_path = cd(target)
			temp_dict = {}
			wall_clock_start_str = `date +%s%N`
			temp_dict['wall_clock_start'] = wall_clock_start_str	 
			last_seen_hash[usr_str]
			cpu_clock_start_str = current_path && `cat */cpuacct.usage`
			temp_dict['cpu_clock_start'] = cpu_clock_start_str  
			last_seen_hash[usr_str] = temp_dict   
		}
	}
	return last_seen_hash
}

prev_seen_user_dict = get_active_user_slices()
prev_usr_slices = prev_seen_user_dict.keys()
last_seen_users = prev_usr_slices.len()
echo("Number of last seen keys: $last_seen_users")
echo("Sleeping for 60 seconds...")
sleep(1000)
new_seen_user_dict = get_active_user_slices()
new_usr_slices = new_seen_user_dict.keys()
newly_seen_users = new_usr_slices.len()
echo("Number of new keys: $newly_seen_users")
active_keys = new_usr_slices.filter(f(x){x in prev_usr_slices})
active_users = active_keys.len()
echo("Number of active keys: $active_users")
echo("I ❤ Northeastern")